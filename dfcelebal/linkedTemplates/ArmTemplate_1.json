{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfcelebal"
		},
		"CPFDataLakeGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'CPFDataLakeGen2'"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Sftp1'"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"CPFDataLakeGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cpfstorage.dfs.core.windows.net/"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "192.168.1.5"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"SqlServer1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"SqlServer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "BikeStores"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CPFDataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('CPFDataLakeGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('CPFDataLakeGen2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "CFPIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "CWSHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer1_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "CWSHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataT1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copied data from azure sql database to azure blob storage in avro file formatting.",
				"activities": [
					{
						"name": "ForEach_go6",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_go6",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "SalesLT.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "sdcelebalw5//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AvroSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "AvroWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_go6",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_go6",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Address"
								},
								"destination": {
									"fileName": "SalesLT.Address.csv"
								}
							},
							{
								"source": {
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesLT.Customer.csv"
								}
							},
							{
								"source": {
									"table": "CustomerAddress"
								},
								"destination": {
									"fileName": "SalesLT.CustomerAddress.csv"
								}
							},
							{
								"source": {
									"table": "Product"
								},
								"destination": {
									"fileName": "SalesLT.Product.csv"
								}
							},
							{
								"source": {
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "SalesLT.ProductCategory.csv"
								}
							},
							{
								"source": {
									"table": "ProductDescription"
								},
								"destination": {
									"fileName": "SalesLT.ProductDescription.csv"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-07T08:54:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_1d3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copied data from database into blobl storage with avro format",
				"activities": [
					{
						"name": "ForEach_1d3",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_1d3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "SalesLT.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "sdcelebalw5//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AvroSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "AvroWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_1d3",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_1d3",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Address"
								},
								"destination": {
									"fileName": "SalesLT.Address.avro"
								}
							},
							{
								"source": {
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesLT.Customer.avro"
								}
							},
							{
								"source": {
									"table": "CustomerAddress"
								},
								"destination": {
									"fileName": "SalesLT.CustomerAddress.avro"
								}
							},
							{
								"source": {
									"table": "Product"
								},
								"destination": {
									"fileName": "SalesLT.Product.avro"
								}
							},
							{
								"source": {
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "SalesLT.ProductCategory.avro"
								}
							},
							{
								"source": {
									"table": "ProductDescription"
								},
								"destination": {
									"fileName": "SalesLT.ProductDescription.avro"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-07T10:28:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_hng')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copied data from database in parquet format.",
				"activities": [
					{
						"name": "ForEach_hng",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_hng",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "SalesLT.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "sdcelebalw5//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_hng",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_hng",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Address"
								},
								"destination": {
									"fileName": "SalesLT.Address.parquet"
								}
							},
							{
								"source": {
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesLT.Customer.parquet"
								}
							},
							{
								"source": {
									"table": "CustomerAddress"
								},
								"destination": {
									"fileName": "SalesLT.CustomerAddress.parquet"
								}
							},
							{
								"source": {
									"table": "Product"
								},
								"destination": {
									"fileName": "SalesLT.Product.parquet"
								}
							},
							{
								"source": {
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "SalesLT.ProductCategory.parquet"
								}
							},
							{
								"source": {
									"table": "ProductDescription"
								},
								"destination": {
									"fileName": "SalesLT.ProductDescription.parquet"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-07T10:24:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CPFSqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CFPSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Address",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Order"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Test.csv",
						"fileSystem": "sdcelebalw5"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Obj\u0001\u0004\u0014avro.codec\bnull\u0016avro.schema�\u0007{\"type\":\"record\"",
						"type": "String"
					},
					{
						"name": "\"name\":\"HybridDelivery.ClientLibraryJob\"",
						"type": "String"
					},
					{
						"name": "\"fields\":[{\"name\":\"AddressID\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"int\"",
						"type": "String"
					},
					{
						"name": "\"null\"]}4",
						"type": "String"
					},
					{
						"name": "{\"name\":\"AddressLine1\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"6",
						"type": "String"
					},
					{
						"name": "\"null\"]}7",
						"type": "String"
					},
					{
						"name": "{\"name\":\"AddressLine2\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"9",
						"type": "String"
					},
					{
						"name": "\"null\"]}10",
						"type": "String"
					},
					{
						"name": "{\"name\":\"City\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"12",
						"type": "String"
					},
					{
						"name": "\"null\"]}13",
						"type": "String"
					},
					{
						"name": "{\"name\":\"StateProvince\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"15",
						"type": "String"
					},
					{
						"name": "\"null\"]}16",
						"type": "String"
					},
					{
						"name": "{\"name\":\"CountryRegion\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"18",
						"type": "String"
					},
					{
						"name": "\"null\"]}19",
						"type": "String"
					},
					{
						"name": "{\"name\":\"PostalCode\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"21",
						"type": "String"
					},
					{
						"name": "\"null\"]}22",
						"type": "String"
					},
					{
						"name": "{\"name\":\"rowguid\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"24",
						"type": "String"
					},
					{
						"name": "\"null\"]}25",
						"type": "String"
					},
					{
						"name": "{\"name\":\"ModifiedDate\"",
						"type": "String"
					},
					{
						"name": "\"type\":[\"string\"27",
						"type": "String"
					},
					{
						"name": "\"null\"]}]}\u0000Ȓ�\u001b�4�����\u0011?\u0013)�\u0007��\u0007\u0000\u0012\u0000\"8713 Yosemite Ct.\u0002\u0000\u000eBothell\u0000\u0014Washington\u0000\u001aUnited States\u0000",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CPFDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order.csv",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CPFDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_jcx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CPFDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CPFDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_jcx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CFPSqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "sales",
					"table": "customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CUST_MSTR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_CUST_MSTR",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddDateFromFilename"
						}
					],
					"scriptLines": [
						"parameters{",
						"     fileName as string,",
						"     folderPath as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     partitionRootPath: '/curated/master_child_export/',",
						"     wildcardPaths:['/raw/curated/CUST_MSTR/']) ~> source1",
						"source1 derive(Date = toDate( substring( $fileName, length('CUST_MSTR_'), 8 ), 'yyyyMMdd' )) ~> AddDateFromFilename",
						"AddDateFromFilename sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_MasterChild')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_MasterChild",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddDatekey"
						}
					],
					"scriptLines": [
						"parameters{",
						"     fileName as string,",
						"     folderPath as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(DateKey = substring(\r",
						"  $fileName, \r",
						"  length('master_child_export-'), \r",
						"  8\r",
						")) ~> AddDatekey",
						"AddDatekey sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeplineCPF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Data From Local MS SQL Server into Source",
				"activities": [
					{
						"name": "ForEach_jcx",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_jcx",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "source//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_jcx",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_jcx",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Customer"
								},
								"destination": {
									"fileName": "dbo.Customer.txt"
								}
							},
							{
								"source": {
									"table": "Inventory"
								},
								"destination": {
									"fileName": "dbo.Inventory.txt"
								}
							},
							{
								"source": {
									"table": "Order"
								},
								"destination": {
									"fileName": "dbo.Order.txt"
								}
							},
							{
								"source": {
									"table": "Product"
								},
								"destination": {
									"fileName": "dbo.Product.txt"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_jcx')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_jcx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ProcessAllFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_RawFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SW_FileType",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "switch(\n  true,\n  startsWith(item().name,'CUST_MSTR_'), 'CUST',\n  startsWith(item().name,'master_child_export-'), 'MASTER',\n  startsWith(item().name,'H_ECOM_ORDER'), 'ECOM',\n  'OTHER'\n)\n",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "CUST",
												"activities": [
													{
														"name": "DF_CUST_MSTR",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataflow": {
																"referenceName": "DF_CUST_MSTR",
																"type": "DataFlowReference",
																"parameters": {
																	"fileName": {
																		"value": "'@{$fileName}'",
																		"type": "Expression"
																	},
																	"folderPath": {
																		"value": "'@{$folderPath}'",
																		"type": "Expression"
																	}
																},
																"datasetParameters": {
																	"source1": {
																		"folderPath": {
																			"value": "@$folderPath",
																			"type": "Expression"
																		},
																		"fileName": {
																			"value": "@$fileName\n",
																			"type": "Expression"
																		}
																	},
																	"sink1": {}
																}
															},
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															},
															"traceLevel": "Fine"
														}
													}
												]
											},
											{
												"value": "MASTER",
												"activities": [
													{
														"name": "DF_MasterChild",
														"type": "ExecuteDataFlow",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"staging": {},
															"compute": {
																"coreCount": 8,
																"computeType": "General"
															},
															"traceLevel": "Fine"
														}
													}
												]
											},
											{
												"value": "ECOM",
												"activities": [
													{
														"name": "COPY_H_ECOM",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [
															{
																"name": ""
															},
															{
																"name": "Source",
																"value": "raw/H_ECOM_ORDER/"
															}
														],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_ECOM",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "DelimitedText4",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Custom1",
												"type": "Custom",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"referenceObjects": {
														"linkedServices": [],
														"datasets": []
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T13:08:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CUST_MSTR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCPF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CPFSqlServerTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CPFSqlServerTable')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinecopydataMSSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-12T17:03:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "schedule based trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_1d3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2025-07-07T11:26:00",
						"endTime": "2025-07-07T17:10:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_1d3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_ProcessAllFiles",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-16T13:22:00",
						"endTime": "2025-07-18T13:22:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ProcessAllFiles')]"
			]
		}
	]
}